{"version":3,"sources":["pages/MovieDetailsPage/MovieDetailsPage.module.css","components/Navigation/Navigation.module.css","services/api.js","pages/HomePage/HomePage.js","components/SearchBar/SearchBar.js","pages/MoviesPage/MoviesPage.js","routes.js","pages/NotFoundPage/NotFoundPage.js","components/Navigation/Navigation.js","pages/Cast/Cast.js","pages/Reviews/Reviews.js","pages/MovieDetailsPage/MovieDetailsPage.js","components/App.js","index.js"],"names":["module","exports","fetchTrends","axios","get","searchShows","query","searchExactShow","id","searchCast","searchReview","HomePage","state","trends","fetchTrendsFunc","API","then","res","setState","data","results","this","map","el","key","to","title","name","Component","SearchBar","value","handleChange","e","target","handleSubmit","onSubmit","props","preventDefault","type","onChange","MoviesPage","shows","fetchFilms","q","onSearchSubmit","history","location","push","search","currentSearch","URLSearchParams","prevProps","prevSearch","NotFoundPage","routes","Navigation","className","styles","navigationList","activeClassName","activeLink","Cast","casts","movieId","match","params","cast","style","width","listStyle","height","src","profile_path","alt","original_title","character","Reviews","review","length","author","content","MovieDetailsPage","item","genres","fetchShow","returnToPrevLocation","goBack","url","reduce","acc","onClick","navDescriptionList","backdrop_path","vote_average","overview","navDetailsList","path","component","App","exact","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.7f7c0496.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"activeLink\":\"MovieDetailsPage_activeLink__1DCqp\",\"navDescriptionList\":\"MovieDetailsPage_navDescriptionList__1vtFz\",\"navDetailsList\":\"MovieDetailsPage_navDetailsList__nHny0\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"activeLink\":\"Navigation_activeLink__2vd4N\",\"navigationList\":\"Navigation_navigationList__2vDCl\"};","import axios from 'axios';\n\nexport const fetchTrends = () =>\n  axios.get(\n    'https://api.themoviedb.org/3/trending/all/day?api_key=84a23f82b9362154e36c39c8577e0da4',\n  );\n\nexport const searchShows = (query = 'Batman') =>\n  axios.get(\n    `https://api.themoviedb.org/3/search/movie?api_key=84a23f82b9362154e36c39c8577e0da4&language=en-US&query=${query}&page=1&include_adult=false`,\n  );\n\nexport const searchExactShow = id =>\n  axios.get(\n    `https://api.themoviedb.org/3/movie/${id}?api_key=84a23f82b9362154e36c39c8577e0da4&language=en-US`,\n  );\n\nexport const searchCast = id =>\n  axios.get(\n    `https://api.themoviedb.org/3/movie/${id}/credits?api_key=84a23f82b9362154e36c39c8577e0da4`,\n  );\n\nexport const searchReview = id =>\n  axios.get(\n    `https://api.themoviedb.org/3/movie/${id}/reviews?api_key=84a23f82b9362154e36c39c8577e0da4&language=en-US&page=1`,\n  );\n","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport * as API from '../../services/api';\n\nclass HomePage extends Component {\n  static propTypes = {\n    history: PropTypes.shape({}).isRequired,\n    location: PropTypes.shape({}).isRequired,\n    match: PropTypes.shape({}).isRequired,\n  };\n\n  state = {\n    trends: [],\n  };\n\n  componentDidMount() {\n    this.fetchTrendsFunc();\n  }\n\n  fetchTrendsFunc = () => {\n    API.fetchTrends().then(res => this.setState({ trends: res.data.results }));\n  };\n\n  render() {\n    const { trends } = this.state;\n\n    return (\n      <div>\n        <ul>\n          {trends.map(el => (\n            <li key={el.id}>\n              <Link to={`/movies/${el.id}`}>{el.title || el.name}</Link>\n            </li>\n          ))}\n        </ul>\n      </div>\n    );\n  }\n}\nexport default HomePage;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nexport default class SearchBar extends Component {\n  static propTypes = {\n    onSubmit: PropTypes.func.isRequired,\n  };\n\n  state = {\n    value: '',\n  };\n\n  handleChange = e => {\n    this.setState({ value: e.target.value });\n  };\n\n  handleSubmit = e => {\n    const { value } = this.state;\n    const { onSubmit } = this.props;\n    e.preventDefault();\n    onSubmit(value);\n    this.setState({ value: '' });\n  };\n\n  render() {\n    const { value } = this.state;\n    return (\n      <>\n        <form onSubmit={this.handleSubmit}>\n          <input value={value} type=\"text\" onChange={this.handleChange} />\n          <button type=\"submit\">Search</button>\n        </form>\n      </>\n    );\n  }\n}\n","/* eslint-disable react/prop-types */\nimport React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport * as API from '../../services/api';\nimport SearchBar from '../../components/SearchBar/SearchBar';\n\nclass MoviesPage extends Component {\n  static propTypes = {\n    history: PropTypes.shape({}).isRequired,\n    location: PropTypes.shape({}).isRequired,\n    match: PropTypes.shape({}).isRequired,\n  };\n\n  state = {\n    shows: [],\n  };\n\n  componentDidMount() {\n    const { location } = this.props;\n    const currentSearch = new URLSearchParams(location.search).get('search');\n    if (!currentSearch) {\n      return;\n    }\n    this.fetchFilms(currentSearch);\n  }\n\n  componentDidUpdate(prevProps) {\n    const prevSearch = new URLSearchParams(prevProps.location.search).get(\n      'search',\n    );\n    const { location } = this.props;\n    const currentSearch = new URLSearchParams(location.search).get('search');\n\n    if (prevSearch === currentSearch) {\n      return;\n    }\n    this.fetchFilms(currentSearch);\n  }\n\n  fetchFilms = q => {\n    API.searchShows(q).then(res => this.setState({ shows: res.data.results }));\n  };\n\n  onSearchSubmit = query => {\n    const { history, location } = this.props;\n    history.push({\n      ...location,\n      search: `?search=${query}`,\n    });\n  };\n\n  render() {\n    const { shows } = this.state;\n    return (\n      <div>\n        <SearchBar onSubmit={this.onSearchSubmit} />\n        <ul>\n          {shows.map(el => (\n            <li key={el.id}>\n              <Link to={`/movies/${el.id}`}>{el.title}</Link>\n            </li>\n          ))}\n        </ul>\n      </div>\n    );\n  }\n}\nexport default MoviesPage;\n","export default {\n  HOME: '/',\n  MOVIES_PAGE: '/movies/',\n  MOVIES_DETAILS: '/movies/:movieId',\n  MOVIES_CAST: '/movies/:movieId/cast',\n  MOVIE_REVIEWS: '/movies/:movieId/reviews',\n};\n","import React from 'react';\nimport { NavLink } from 'react-router-dom';\nimport routes from '../../routes';\n\nconst NotFoundPage = () => {\n  return (\n    <>\n      <div>\n        <h2>ТАКАЯ СТРАНИЦА НЕ НАЙДЕНА</h2>\n        <p>\n          Єто наша СТРАНИЦА\n          <NavLink to={routes.HOME}>ДОМ</NavLink>\n        </p>\n      </div>\n    </>\n  );\n};\n\nexport default NotFoundPage;\n","import React from 'react';\nimport { NavLink } from 'react-router-dom';\nimport styles from './Navigation.module.css';\n\nimport routes from '../../routes';\n\nconst Navigation = () => {\n  return (\n    <ul className={styles.navigationList}>\n      <li>\n        <NavLink activeClassName={styles.activeLink} to={routes.HOME}>\n          HOME\n        </NavLink>\n      </li>\n      <li>\n        <NavLink activeClassName={styles.activeLink} to={routes.MOVIES_PAGE}>\n          MOVIES\n        </NavLink>\n      </li>\n    </ul>\n  );\n};\n\nexport default Navigation;\n","import React, { Component } from 'react';\nimport * as API from '../../services/api';\n\nexport default class Cast extends Component {\n  state = {\n    casts: '',\n  };\n\n  componentDidMount() {\n    this.searchCast();\n  }\n\n  searchCast = () => {\n    const { match } = this.props;\n    const { movieId } = match.params;\n\n    API.searchCast(movieId).then(res =>\n      this.setState({ casts: res.data.cast }),\n    );\n  };\n\n  render() {\n    const { casts } = this.state;\n    return (\n      <div>\n        {casts && (\n          <>\n            <ul\n              style={{\n                width: '600px',\n                listStyle: 'none',\n              }}\n            >\n              {casts.map(el => (\n                <li key={el.id}>\n                  <img\n                    style={{ width: '180px', height: '240px' }}\n                    src={`https://image.tmdb.org/t/p/w500${el.profile_path}`}\n                    alt={el.original_title}\n                  />\n                  <p>{el.name}</p>\n                  <p>{el.character}</p>\n                </li>\n              ))}\n              )\n            </ul>\n          </>\n        )}\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport * as API from '../../services/api';\n\nexport default class Reviews extends Component {\n  state = {\n    review: {\n      results: [],\n    },\n  };\n\n  componentDidMount() {\n    this.searchReview();\n  }\n\n  searchReview = () => {\n    const { match } = this.props;\n    const { movieId } = match.params;\n\n    API.searchReview(movieId).then(res => this.setState({ review: res.data }));\n  };\n\n  render() {\n    const { review } = this.state;\n    return (\n      <div>\n        {review.results && review.results.length > 0 && (\n          <>\n            <ul\n              style={{\n                width: '600px',\n                listStyle: 'none',\n              }}\n            >\n              {review.results.map(el => (\n                <li key={el.id}>\n                  <h4>{el.author}</h4>\n                  <p>{el.content}</p>\n                </li>\n              ))}\n            </ul>\n          </>\n        )}\n        {review.results.length === 0 && (\n          <div>\n            <h4>No reviews found!!!</h4>\n          </div>\n        )}\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { Route, Switch, NavLink } from 'react-router-dom';\nimport routes from '../../routes';\nimport * as API from '../../services/api';\nimport Cast from '../Cast/Cast';\nimport Reviews from '../Reviews/Reviews';\nimport styles from './MovieDetailsPage.module.css';\n\nexport default class MovieDetailsPage extends Component {\n  static propTypes = {\n    history: PropTypes.shape({\n      goBack: PropTypes.func.isRequired,\n    }).isRequired,\n    location: PropTypes.shape({}).isRequired,\n    match: PropTypes.shape({\n      url: PropTypes.string.isRequired,\n      params: PropTypes.string.isRequired,\n    }).isRequired,\n  };\n\n  state = {\n    item: {\n      genres: [],\n    },\n  };\n\n  componentDidMount() {\n    this.fetchShow();\n  }\n\n  fetchShow = () => {\n    const { match } = this.props;\n    const { movieId } = match.params;\n\n    API.searchExactShow(movieId).then(res => this.setState({ item: res.data }));\n  };\n\n  returnToPrevLocation = () => {\n    const { history } = this.props;\n    history.goBack();\n  };\n\n  render() {\n    const { match } = this.props;\n    const { item } = this.state;\n    const { url } = match;\n    const genres = item.genres.reduce((acc, el) => `${acc} ${el.name}`, '');\n\n    return (\n      <div>\n        <button type=\"button\" onClick={this.returnToPrevLocation}>\n          Go back\n        </button>\n        {item && (\n          <>\n            <ul className={styles.navDescriptionList}>\n              <li>\n                <img\n                  src={`https://image.tmdb.org/t/p/w500${item.backdrop_path}`}\n                  alt={item.original_title}\n                />\n              </li>\n              <li>\n                <h3>{item.original_title}</h3>\n                <p>User score {item.vote_average * 10}%</p>\n                <h3>Overview</h3>\n                <p>{item.overview}</p>\n                <h3>Genres</h3>\n                <p>{genres}</p>\n              </li>\n            </ul>\n          </>\n        )}\n        <h2>Additional information</h2>\n        <ul className={styles.navDetailsList}>\n          <li>\n            <NavLink activeClassName={styles.activeLink} to={`${url}/cast`}>\n              Cast\n            </NavLink>\n          </li>\n          <li>\n            <NavLink activeClassName={styles.activeLink} to={`${url}/reviews`}>\n              Reviews\n            </NavLink>\n          </li>\n        </ul>\n        <Switch>\n          <Route path={routes.MOVIES_CAST} component={Cast} />\n          <Route path={routes.MOVIE_REVIEWS} component={Reviews} />\n        </Switch>\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport { Route, Switch } from 'react-router-dom';\nimport HomePage from '../pages/HomePage/HomePage';\nimport MoviesPage from '../pages/MoviesPage/MoviesPage';\nimport NotFoundPage from '../pages/NotFoundPage/NotFoundPage';\nimport routes from '../routes';\nimport Navigation from './Navigation/Navigation';\nimport MovieDetailsPage from '../pages/MovieDetailsPage/MovieDetailsPage';\n\nclass App extends Component {\n  state = {};\n\n  render() {\n    return (\n      <>\n        <Navigation />\n        <Switch>\n          <Route exact path={routes.HOME} component={HomePage} />\n          <Route path={routes.MOVIES_DETAILS} component={MovieDetailsPage} />\n          <Route path={routes.MOVIES_PAGE} component={MoviesPage} />\n          <Route component={NotFoundPage} />\n        </Switch>\n      </>\n    );\n  }\n}\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { HashRouter } from 'react-router-dom';\nimport App from './components/App';\n\nReactDOM.render(\n  <HashRouter>\n    <App />\n  </HashRouter>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}